{"version":3,"sources":["../src/ExifOrientationImg.js"],"names":["snakeToCamelCaseKeys","obj","Object","keys","map","k","replace","m","toUpperCase","reduce","a","b","ExifOrientationImg","state","orientation","args","event","otherArgs","imageElement","target","onLoad","props","windowImage","window","Image","getData","setState","getTag","src","alt","style","imgProps","_onImageLoaded","bind"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,uBAAuB,SAAvBA,oBAAuB,CAACC,GAAD;AAAA,SAC3BC,OAAOC,IAAP,CAAYF,GAAZ,EACGG,GADH,CACO;AAAA,+BACFC,EAAEC,OAAF,CAAU,QAAV,EAAoB;AAAA,aAAKC,EAAE,CAAF,EAAKC,WAAL,EAAL;AAAA,KAApB,CADE,EAC6CP,IAAII,CAAJ,CAD7C;AAAA,GADP,EAIGI,MAJH,CAIU,UAACC,CAAD,EAAIC,CAAJ;AAAA,wBAAeD,CAAf,EAAqBC,CAArB;AAAA,GAJV,EAIoC,EAJpC,CAD2B;AAAA,CAA7B;;IAOMC,kB;;;;;;;;;;;;;;gNAEJC,K,GAEI;AACFC,mBAAa;AADX,K;;;;;qCAI2B;AAAA;;AAAA,yCAAbC,IAAa;AAAbA,YAAa;AAAA;;AAAA,2BACCA,IADD;AAAA,UACtBC,KADsB;AAAA,UACZC,SADY;;AAE7B,UAAMC,eAAiCF,MAAMG,MAA7C;AAF6B,UAGrBC,MAHqB,GAGV,KAAKC,KAHK,CAGrBD,MAHqB;;AAK7B;;AACA,UAAME,cAAcC,OAAOC,KAA3B;AACAD,aAAOC,KAAP,GAAe,IAAf;;AAEA;AACA,UAAI,CAAC,iBAAKC,OAAL,CAAaP,YAAb,EAA2B,YAAM;AACpC,eAAKQ,QAAL,CAAc;AACZZ,uBAAa,iBAAKa,MAAL,CAAYT,YAAZ,EAA0B,aAA1B;AADD,SAAd;AAGAE,kBAAUA,yBAAOJ,KAAP,4BAAiBC,SAAjB,GAAV;AACD,OALI,CAAL,EAKI;AACFG,kBAAUA,yBAAOJ,KAAP,4BAAiBC,SAAjB,GAAV;AACD;;AAED;AACAM,aAAOC,KAAP,GAAeF,WAAf;AACD;;;6BAEQ;AAAA,mBAOH,KAAKD,KAPF;AAAA,UAELO,GAFK,UAELA,GAFK;AAAA,UAGLC,GAHK,UAGLA,GAHK;AAAA,gCAILC,KAJK;AAAA,UAILA,KAJK,gCAIG,EAJH;AAAA,UAKLV,MALK,UAKLA,MALK;AAAA,UAMFW,QANE;;AAAA,UASLjB,WATK,GAUH,KAAKD,KAVF,CASLC,WATK;;;AAYP,aACE;AACE,gBAAQ,KAAKkB,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CADV;AAEE,aAAKL,GAFP;AAGE,aAAKC,GAHP;AAIE,4BAEIf,cACEd,qBAAqB,wBAASc,WAAT,CAArB,CADF,GAEE,EAJN,EAMKgB,KANL;AAJF,SAYMC,QAZN,EADF;AAgBD;;;;;;kBAGYnB,kB","file":"ExifOrientationImg.js","sourcesContent":["/* @flow */\nimport React, { Component } from 'react';\nimport EXIF from 'exif-js';\nimport exif2css from 'exif2css';\n\nconst snakeToCamelCaseKeys = (obj: Object): Object =>\n  Object.keys(obj)\n    .map(k => ({\n      [k.replace(/(-\\w)/g, m => m[1].toUpperCase())]: obj[k],\n    }))\n    .reduce((a, b) => ({...a, ...b}), {});\n\nclass ExifOrientationImg extends Component {\n  props: Object;\n  state: {\n    orientation: ?number,\n  } = {\n    orientation: null,\n  };\n\n  _onImageLoaded(...args: any[]) {\n    const [event, ...otherArgs] = args;\n    const imageElement: HTMLImageElement = event.target;\n    const { onLoad } = this.props;\n\n    // Fix for an issue affecting exif-js: see https://github.com/exif-js/exif-js/issues/95\n    const windowImage = window.Image\n    window.Image = null;\n    \n    // Do the actual EXIF operations\n    if (!EXIF.getData(imageElement, () => {\n      this.setState({\n        orientation: EXIF.getTag(imageElement, 'Orientation'),\n      });\n      onLoad && onLoad(event, ...otherArgs);\n    })) {\n      onLoad && onLoad(event, ...otherArgs);\n    }\n\n    // Re-establish the reference\n    window.Image = windowImage;\n  }\n\n  render() {\n    const {\n      src,\n      alt,\n      style = {},\n      onLoad,\n      ...imgProps,\n    } = this.props;\n    const {\n      orientation,\n    } = this.state;\n\n    return (\n      <img\n        onLoad={this._onImageLoaded.bind(this)}\n        src={src}\n        alt={alt}\n        style={{\n          ...(\n            orientation ?\n              snakeToCamelCaseKeys(exif2css(orientation)) :\n              {}\n          ),\n          ...style,\n        }}\n        {...imgProps}\n      />\n    );\n  }\n}\n\nexport default ExifOrientationImg;\n"]}